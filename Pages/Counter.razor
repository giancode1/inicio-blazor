@page "/counter/{currentCountParameter?}"
@inject ILogger<Counter> logger;

@* Titulo de la página arriba en el navegador *@
<PageTitle>Counter</PageTitle> 

<ModuleTitle Title="Counter" />

@* arroba para llamar codigo C# *@
<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    //Aquí todo el código C#
    private int currentCount = 0;

    [Parameter]
    public string? currentCountParameter {get; set;}
    
    // otra forma de pasar parámetros
    [SupplyParameterFromQuery]
    [Parameter]
    public string? CounterFromQuery {get; set;}


    //* blon  snippet   <===
    //blon set
    public override async Task SetParametersAsync(ParameterView parameters)
    {   // 1. Primero que se ejecuta
        if (parameters.TryGetValue<string>(nameof(currentCountParameter), out var value))
        {
            if(value is not null)
                currentCountParameter = value;
        }
        await base.SetParametersAsync(parameters);
    }
    protected override void OnInitialized()
    {
        //currentCount = currentCountParameter != null ? int.Parse(currentCountParameter) : 0;
        currentCount = CounterFromQuery != null ? int.Parse(CounterFromQuery) : 0;
        // * visita counter?CounterFromQuery=13   // por ejemplo
        logger.LogInformation("2. Se inicia el componente");
    }
    protected override void OnParametersSet()
    {
        logger.LogInformation("3. Se envian los parametros");
    }
    protected override void OnAfterRender(bool firstRender)
    {
        logger.LogInformation("4. Esto ocurre después de iniciar el componente");
    }
    private void IncrementCount()
    {
        currentCount++;
    }
}
